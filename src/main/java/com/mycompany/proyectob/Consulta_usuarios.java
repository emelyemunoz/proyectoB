package com.mycompany.proyectob;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author emely
 */
public class Consulta_usuarios extends javax.swing.JFrame {

    private usuario usuario;

    /**
     * Creates new form Consulta_usuarios
     */
    public Consulta_usuarios() {
        initComponents();

        pintarTabla();

        jComboBox_rol.removeAllItems();
        jComboBox_rol.addItem("Administrador");
        jComboBox_rol.addItem("Vendedor");

    }

    //metodo para pintar la tabla y las columnas y filas que lleva
    private void pintarTabla() {
        DefaultTableModel t = new DefaultTableModel(new String[]{"nombre", "usuario", "password", "rol"}, ProyectoB.usuarios.size());
        jTable1.setModel(t);

        TableModel tabla = jTable1.getModel();

        for (int i = 0; i < ProyectoB.usuarios.size(); i++) {
            usuario u = ProyectoB.usuarios.get(i);
            tabla.setValueAt(u.nombre, i, 0);
            tabla.setValueAt(u.usuario, i, 1);
            tabla.setValueAt(u.password, i, 2);
            tabla.setValueAt(u.rol, i, 3);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton_salir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField_password = new javax.swing.JTextField();
        jComboBox_rol = new javax.swing.JComboBox<>();
        jButton_borrar = new javax.swing.JButton();
        jButton_editar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton_guardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField_nombre = new javax.swing.JTextField();
        jTextField_usuario = new javax.swing.JTextField();
        jButton_exportarxml = new javax.swing.JButton();
        jButton_limpiarxml = new javax.swing.JButton();
        jButton_importarxml = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consulta de usuarios");

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setFont(new java.awt.Font("URW Gothic", 0, 18)); // NOI18N
        jLabel1.setText("Consulta de usuarios");

        jButton_salir.setBackground(new java.awt.Color(255, 204, 204));
        jButton_salir.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jButton_salir.setText("Cerrar");
        jButton_salir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jButton_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton_salir))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jTextField_password.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jComboBox_rol.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jComboBox_rol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton_borrar.setBackground(new java.awt.Color(255, 153, 153));
        jButton_borrar.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jButton_borrar.setText("borrar");
        jButton_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_borrarActionPerformed(evt);
            }
        });

        jButton_editar.setBackground(new java.awt.Color(255, 153, 153));
        jButton_editar.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jButton_editar.setText("Editar");
        jButton_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_editarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jLabel3.setText("Usuario:");

        jLabel4.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jLabel4.setText("Password:");

        jLabel5.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jLabel5.setText("Rol:");

        jButton_guardar.setBackground(new java.awt.Color(255, 153, 153));
        jButton_guardar.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jButton_guardar.setText("Guardar");
        jButton_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_guardarActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField_nombre.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jTextField_usuario.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jButton_exportarxml.setBackground(new java.awt.Color(255, 153, 153));
        jButton_exportarxml.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jButton_exportarxml.setText("Exportar XML");
        jButton_exportarxml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_exportarxmlActionPerformed(evt);
            }
        });

        jButton_limpiarxml.setBackground(new java.awt.Color(255, 153, 153));
        jButton_limpiarxml.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jButton_limpiarxml.setText("Limpiar XML");
        jButton_limpiarxml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_limpiarxmlActionPerformed(evt);
            }
        });

        jButton_importarxml.setBackground(new java.awt.Color(255, 153, 153));
        jButton_importarxml.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jButton_importarxml.setText("Importar XML");
        jButton_importarxml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_importarxmlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton_editar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_borrar))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextField_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextField_nombre))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField_password)
                                        .addComponent(jComboBox_rol, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jButton_guardar, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton_exportarxml, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton_limpiarxml, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton_importarxml, javax.swing.GroupLayout.Alignment.TRAILING)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_borrar)
                    .addComponent(jButton_editar))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_exportarxml))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_limpiarxml))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox_rol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_importarxml)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_guardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton_salirActionPerformed

    private void jButton_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_borrarActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(this, "Fila"+jTable1.getSelectedRow()); -- metodo para mostrar que fila fue seleccionada--

        int borrar = jTable1.getSelectedRow();
        if (borrar > -1) {
            if (borrar == 0) {
                JOptionPane.showMessageDialog(this, "No puede eliminar al administrador");
            } else {

                if (JOptionPane.showConfirmDialog(this, "Esta seguro de eliminar al usuario") == 0) {
                    ProyectoB.usuarios.remove(borrar);
                    pintarTabla();
                    JOptionPane.showMessageDialog(this, "Usuario eliminado");
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un elemento a borrar");
        }
    }//GEN-LAST:event_jButton_borrarActionPerformed

    private void jButton_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_editarActionPerformed
        int modificar = jTable1.getSelectedRow();
        if (modificar > -1) {
            usuario = ProyectoB.usuarios.get(modificar);
            jTextField_nombre.setText(usuario.nombre);
            jTextField_usuario.setText(usuario.usuario);
            jTextField_password.setText(usuario.password);
            jComboBox_rol.setSelectedItem(usuario.rol - 1);
        } else {
            JOptionPane.showMessageDialog(this, "selccione un elemento a modificar");
        }
    }//GEN-LAST:event_jButton_editarActionPerformed

    private void jButton_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_guardarActionPerformed
        // TODO add your handling code here:

        if (usuario != null) {
            String nombre = jTextField_nombre.getText();
            String usuarioNombre = jTextField_usuario.getText(); // Cambié el nombre para evitar conflicto
            String password = jTextField_password.getText();
            String rol = jComboBox_rol.getSelectedItem().toString();

            // Actualiza los atributos directamente
            usuario.nombre = nombre;
            usuario.usuario = usuarioNombre;
            usuario.password = password;

            // Asigna el rol
            if (rol.equals("administrador")) {
                usuario.rol = 1;
            } else {
                usuario.rol = 2;
            }

            pintarTabla();
        }
    }//GEN-LAST:event_jButton_guardarActionPerformed

    private void jButton_exportarxmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_exportarxmlActionPerformed
        // TODO add your handling code here:
        try {
            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
            Document doc = docBuilder.newDocument();

            // Elemento raíz
            Element rootElement = doc.createElement("usuarios");
            doc.appendChild(rootElement);

            // Agregar usuarios
            for (usuario u : ProyectoB.usuarios) {
                Element usuarioElement = doc.createElement("usuario");

                Element nombre = doc.createElement("nombre");
                nombre.appendChild(doc.createTextNode(u.nombre));
                usuarioElement.appendChild(nombre);

                Element usuarioNombre = doc.createElement("usuario");
                usuarioNombre.appendChild(doc.createTextNode(u.usuario));
                usuarioElement.appendChild(usuarioNombre);

                Element password = doc.createElement("password");
                password.appendChild(doc.createTextNode(u.password));
                usuarioElement.appendChild(password);

                Element rol = doc.createElement("rol");
                rol.appendChild(doc.createTextNode(String.valueOf(u.rol)));
                usuarioElement.appendChild(rol);

                rootElement.appendChild(usuarioElement);
            }

            // Guardar el archivo XML
            FileWriter writer = new FileWriter("usuarios.xml");
            writer.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
            writer.write("<usuarios>\n");
            for (usuario u : ProyectoB.usuarios) {
                writer.write("  <usuario>\n");
                writer.write("    <nombre>" + u.nombre + "</nombre>\n");
                writer.write("    <usuario>" + u.usuario + "</usuario>\n");
                writer.write("    <password>" + u.password + "</password>\n");
                writer.write("    <rol>" + u.rol + "</rol>\n");
                writer.write("  </usuario>\n");
            }
            writer.write("</usuarios>");
            writer.close();

            JOptionPane.showMessageDialog(null, "Archivo XML creado con éxito.");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al exportar a XML: " + e.getMessage());
        }


    }//GEN-LAST:event_jButton_exportarxmlActionPerformed

    private void jButton_limpiarxmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_limpiarxmlActionPerformed
        // TODO add your handling code here:
        try {
            File file = new File("usuarios.xml");
            if (file.exists()) {
                // Limpiar el contenido del archivo
                FileWriter writer = new FileWriter(file);
                writer.write(""); // Escribir vacío
                writer.close();
                JOptionPane.showMessageDialog(this, "Archivo XML limpiado con éxito.");
            } else {
                JOptionPane.showMessageDialog(this, "El archivo XML no existe.");
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al limpiar el archivo XML: " + e.getMessage());
        }

    }//GEN-LAST:event_jButton_limpiarxmlActionPerformed

    private void jButton_importarxmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_importarxmlActionPerformed
    try {
        File file = new File("usuarios.xml");
        if (!file.exists()) {
            JOptionPane.showMessageDialog(this, "El archivo XML no existe.");
            return;
        }

        DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
        Document doc = docBuilder.parse(file);
        doc.getDocumentElement().normalize();

        ProyectoB.usuarios.clear();

        NodeList nodeList = doc.getElementsByTagName("usuario");
        for (int i = 0; i < nodeList.getLength(); i++) {
            Element element = (Element) nodeList.item(i);

            String nombre = getElementValue(element, "nombre");
            String usuarioNombre = getElementValue(element, "usuario");
            String password = getElementValue(element, "password");
            String rolStr = getElementValue(element, "rol");

            // Verificar que los valores no sean nulos
            if (nombre == null || usuarioNombre == null || password == null || rolStr == null) {
                System.out.println("Datos de usuario incompletos, saltando usuario " + (i + 1));
                continue; // Salta si falta algún dato
            }

            usuario nuevoUsuario = new usuario();
            nuevoUsuario.nombre = nombre;
            nuevoUsuario.usuario = usuarioNombre;
            nuevoUsuario.password = password;

            // Manejo del rol
            try {
                nuevoUsuario.rol = Integer.parseInt(rolStr);
            } catch (NumberFormatException e) {
                System.out.println("Error al convertir rol a entero: " + rolStr);
                continue; // Salta si hay un error en la conversión
            }

            ProyectoB.usuarios.add(nuevoUsuario);
        }

        pintarTabla();
        JOptionPane.showMessageDialog(this, "Usuarios importados con éxito.");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al importar desde XML: " + e.getMessage());
    }
}

private String getElementValue(Element element, String tagName) {
    NodeList nodeList = element.getElementsByTagName(tagName);
    return nodeList.getLength() > 0 ? nodeList.item(0).getTextContent().trim() : null;


    }//GEN-LAST:event_jButton_importarxmlActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_borrar;
    private javax.swing.JButton jButton_editar;
    private javax.swing.JButton jButton_exportarxml;
    private javax.swing.JButton jButton_guardar;
    private javax.swing.JButton jButton_importarxml;
    private javax.swing.JButton jButton_limpiarxml;
    private javax.swing.JButton jButton_salir;
    private javax.swing.JComboBox<String> jComboBox_rol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_nombre;
    private javax.swing.JTextField jTextField_password;
    private javax.swing.JTextField jTextField_usuario;
    // End of variables declaration//GEN-END:variables
}
